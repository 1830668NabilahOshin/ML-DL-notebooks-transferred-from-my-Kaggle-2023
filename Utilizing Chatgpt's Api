{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"pygments_lexer":"ipython3","nbconvert_exporter":"python","version":"3.6.4","file_extension":".py","codemirror_mode":{"name":"ipython","version":3},"name":"python","mimetype":"text/x-python"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30664,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/oshinkaggle/chatgpt-api?scriptVersionId=161875570\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"!pip install openai\nfrom openai import OpenAI\nimport pandas as pd\n\n#keys\n# \"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\"\n# \"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\"\n\nclient=OpenAI(\n    api_key = \"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\"\n)","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df=pd.read_csv('/kaggle/input/3kbangt5/out.csv')","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def chat_with_chatgpt(prompt, model=\"gpt-3.5-turbo\"):\n    chat_completion=client.chat.completions.create(\n        messages=[\n            {\"role\":\"user\",\n             \"content\":prompt\n            }\n        ],\n        model=\"gpt-3.5-turbo\"\n    )\n    message = chat_completion.choices[0].message.content\n    return message\n\n\ntext = []\n\n\nfor index, row in enumerate(df['Comment']):\n        #print(index)\n        user_prompt ='''You are a Bangla text error correction tool that can identify and correct textual errors in a Bangla text out of the 4 categories which are Spelling, Grammatical, Code Switching and Multiple Errors. Code switching means the mix of bangla and english words written in bengali letters. Multiple errors means If more than one category of error is present among the other 3 categories I mentioned. You must identify the error category among the 4 categories and also correct any textual errors in the Bangla sentence. The Bangla sentence is : {}. You need to comprehend the sentence as a whole before identifying and correcting any errors step by step while keeping the original sentence structure unchanged as much as possible. Keep your response limited to only your corrected output results within the tag <output> Your Corrected Version </output> and the Error category within the tag <c> Your predicted category </c> followed by your corrected output only. Please follow the format and sequence order of the 2 outputs and their tags.'''.format(row) \n        chatbot_response = chat_with_chatgpt(user_prompt)\n        text.append(chatbot_response)\n        if index % 500 == 0:\n            print(index)\n        #if(index==15):\n            #break\n\n#print(text)  ","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"dfs = []\n\n# Iterate through the list and append DataFrames to the list\nfor item in text:\n    if '<output>' not in item:\n        corrected_sentence = \"chatgpt failed\"\n        error_type = \"chatgpt failed\"\n    else:\n        parts = item.split('<output>')\n        corrected_sentence = parts[1].split('</output>')[0].strip()\n        error_type = parts[1].split('</output>')[1].split('<c>')[1].split('</c>')[0].strip() if '<c>' in item else \"None\"\n    \n    df2 = pd.DataFrame({'Correct Form': [corrected_sentence], 'Error Category': [error_type]})\n    dfs.append(df2)\n\n# Concatenate the list of DataFrames into a single DataFrame\ndf2 = pd.concat(dfs, ignore_index=True)\n\n# Display the DataFrame\n#print(df2.head(16))","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(df2.shape)\noutput_file_path = '3kchatgpt-rouge.csv'\ndf.to_csv(output_file_path, index=False)\ndf4 = pd.read_csv('3kchatgpt-rouge.csv')\n\ndf4.head(20)","metadata":{},"execution_count":null,"outputs":[]}]}